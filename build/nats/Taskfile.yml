# A Taskfile
# See https://taskfile.dev/

# See https://nanovms.gitbook.io/ops/google_cloud for ops commands

# This taskfile will enable local building of the application, building of an
# ops image, and cloud deployment management.

# Things needed
# - taskf runner - see above
# - mkcert - https://github.com/FiloSottile/mkcert
# - nkey generator
#   - go get github.com/nats-io/nkeys/nk
#   - https://github.com/nats-io/nkeys/blob/master/nk/README.md


version: '3'

vars:
  appname: nats
  basepath:
    sh: pwd
  apppath: '{{.basepath}}/../../cmd/{{.appname}}'
  configpath: '{{.basepath}}/config/config.json'
  applinux: '{{.appname}}linux'
  nativeapp: '{{.appname}}native'
  imagename: '{{.appname}}-test-image'
  cloud: gcp
  localport: 4222
  cloudport: 4222

# If running with pre-set environment variables do not run the dotenv
dotenv: ['./config/env/.ENV']

tasks:
  default:
    desc: To show tasks use task -l
  build:
    desc: build native and linux apps for running in novavms
    dir: '{{.apppath}}'
    vars:
      secretspath: ./creds/secrets
      nksecretspath: ./msg/secrets
    cmds:
      # See https://github.com/FiloSottile/mkcert
      # Make certificate for grpc tls
      # - mkcert -key-file {{.secretspath}}/serverkey.pem -cert-file {{.secretspath}}/servercert.pem grpc.com
      - nk -gen user > {{.nksecretspath}}/nkuser.seed
      - nk -inkey {{.nksecretspath}}/nkeyuser.seed -pubout > {{.nksecretspath}}/nkeyuser.pub
      # Use of embed to flag context - used for port use
      - echo "cloud" > .context
      - GOOS=linux go build .
      - mv app {{.basepath}}/build/{{.applinux}}
      # Use of embed to flag context - used for port use
      - echo "local" > .context
      - go build .
      - mv app {{.basepath}}/build/{{.nativeapp}}
  run:native:
    desc: run locally using native biuld
    dir: ./
    cmds:
      - task: build
      - ./{{.nativeapp}}
  run:locally:
    desc: run locally using ops
    dir: ./
    cmds:
      - task: build
      - ops run -p "{{.localport}},4222" ./{{.applinux}}
  images:list:
    desc: list images
    cmds:
      - ops image list
      # - ops image list -t {{.cloud}} -c {{.configpath}}
  image:create:
    # This fails to delete the source image
    desc: create image locally
    dir: ./
    cmds:
      - task: build
      - ops image create {{.applinux}} -c {{.configpath}} -i {{.imagename}} -t {{.cloud}}
  delete-image:
    desc: delete the image
    cmds:
      # Note: requires GOOGLE_APPLICATION_CREDENTIALS, GOOGLE_CLOUD_PROJECT, and
      # GOOGLE_CLOUD_ZONE environment variables
      - ops image delete {{.imagename}}.img
      - ops image delete {{.imagename}}
  instance:create:
    # Does not check to see if the cloud image is there and will fail if not
    # There are problems here with Google complaining of a pre-existing image
    desc: create an instance in cloud
    cmds:
      # - task: image:create
      - ops instance create {{.imagename}} -t {{.cloud}} -c {{.configpath}}
      - echo "You can access the instance at the IP listed on port {{.cloudport}}"
  instance:delete:
    desc: delete a remote instance {{.imagename}}
    cmds:
      - ops instance delete {{.imagename}}
  instance:list:
    desc: list instances in cloud
    cmds:
      - ops instance list -t {{.cloud}} -c {{.configpath}}
  fireeall:allow:
    desc: allow http port access
    cmds:
      - gcloud compute firewall-rules create http_allow --allow tcp:{{.cloudport}}
      # - gcloud compute instances add-tags nanovms-test-image-1627604881 --tags http-server,https-server
  instance:test:
    desc: Test deployed cloud instance
    cmds:
      - task: instance:create
      - curl http://127.0.0.1:{{.localport}}/transactions
  test:config:
    desc: Test config module
    dir: '{{.apppath}}/config'
    cmds:
      - go test -v .
  test:logging:
    desc: Test logging module
    dir: '{{.apppath}}/logging'
    cmds:
      - go test -v .
  # Things to do
  # - Delete instance
  # - Delete GCP image
  #   - https://cloud.google.com/sdk/gcloud/reference/compute/images/delete
  # - Use image to make template
  #   - https://cloud.google.com/compute/docs/instance-templates/instance:create-templates
  # - Use template to make managed instance group (MIG)
  #   - https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances
  # - Modify MIG
  #   - https://cloud.google.com/compute/docs/instance-groups/updating-migs
  # - Learn how to replace template used by MIG
